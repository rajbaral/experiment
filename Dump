async splitByBlankPages(threshold = 0.05): Promise<Blob[]> {
  if (!this.dwtObject || !this.isReady) throw new Error('Scanner not ready');

  const docGroups: number[][] = [];
  const totalPages = this.dwtObject.HowManyImagesInBuffer;

  let currentGroup: number[] = [];

  for (let i = 0; i < totalPages; i++) {
    const isBlank = await new Promise<boolean>((resolve) => {
      this.dwtObject!.IsBlankImage(
        i,
        threshold,
        (result: boolean) => resolve(result),
        (_code, _msg) => resolve(false) // treat failure as non-blank
      );
    });

    if (isBlank) {
      if (currentGroup.length) {
        docGroups.push([...currentGroup]);
        currentGroup = [];
      }
    } else {
      currentGroup.push(i);
    }
  }

  if (currentGroup.length) {
    docGroups.push(currentGroup);
  }

  const blobs: Blob[] = [];

  for (const group of docGroups) {
    await new Promise<void>((resolve, reject) => {
      this.dwtObject!.ConvertToBlob(
        group,
        Dynamsoft.DWT.EnumDWT_ImageType.IT_PDF,
        (blob) => {
          blobs.push(blob);
          resolve();
        },
        (_code, msg) => reject(`PDF conversion failed: ${msg}`)
      );
    });
  }

  return blobs;
}


this.dynamsoftScannerService.splitByBlankPages()
  .then((blobs) => {
    // Each blob is a separate document (split by blank pages)
    blobs.forEach((blob, i) => {
      const url = URL.createObjectURL(blob);
      console.log(`Document ${i + 1} URL: `, url);
      // You can also upload these or preview them
    });
  })
  .catch((err) => {
    console.error('Splitting failed:', err);
  });






âš½ Everest Warriors Pickup Game Manager

A web-based application for organizing, managing, and tracking pickup soccer games. It supports features like team creation, member and guest management, game payments (paid vs. free), admin roles (including finance admin), and AWS-integrated authentication and data storage.



I need to research  Dynamsoft and Scanner JS, so we can conduct an assessment on which is the best to use for scanning based on following scenarios
Dymamsoft- Research is done on the following areas and added to the confluence page:

Features

Platform Support

Licensing

Security

Is Dynamsoft able to override user scanner default settings?

ScannerJS- Research is done on the following areas and added to the confluence page:

Features

Platform Support

Licensing

Security

Performance

Ease of Integration

Overall Impressions

Is ScannerJS able to override user scanner default settings?

Note: For Dynamsoft , the following areas can be assessed after is fully implemented (and is out of scope for this story.)

Performance

Ease of Integration

Overall Impressions
